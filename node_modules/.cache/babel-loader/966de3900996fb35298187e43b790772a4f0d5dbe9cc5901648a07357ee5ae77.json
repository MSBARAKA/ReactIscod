{"ast":null,"code":"var _jsxFileName = \"/Users/marie-sophieduplouich/Mooc/mooc-react/src/pages/Storie.jsx\",\n  _s = $RefreshSig$();\n// import React, { useCallback, useEffect, useState } from 'react';\n\n// function Storie(props) {\n\n//     const [counter, setCounter] = useState(0);\n//     const [history, setHistory] = useState([]);\n\n//     useEffect(() => {\n//         setHistory([...history, counter]);\n//     }, [counter]);\n\n//     useCallback(() => {\n//         setHistory([]);\n//     }, []);\n\n//     console.log(history);\n//     return (\n//         <div>\n//             <h2>Other Counter{counter}</h2>\n//             map sur history\n//             <ul>\n//                 {history.map((history, index) => <li key={index}>{history}</li>\n//                 )}\n//             </ul>\n//             <button onClick={() => setHistory([])}>Reset</button>\n\n//             <div className=\"navbar-text\">{counter % 2 ? 'nombre impair' : 'nombre pair'}</div>\n//             <button onClick={() => setCounter(counter + 1)}>+</button>\n//             <button onClick={() => setCounter(counter - 1)}>-</button>\n//         </div>\n//     );\n// }\n\n// export default Storie;\n\n//   un historique apparait quand je clique sur le bouton + ou -.Quand j'actualise la page l'historique disparait. Je ne savais pas que je devais stocker les données\n\n// code du formateur ci-dessous\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Storie(props) {\n  _s();\n  const [counter, setCounter] = useState(0);\n  const [history, setHistory] = useState([]);\n  // ci-dessus c'est réactive\n\n  // remplir l'historique avec la valeur actuelle du compteur = Usecallback\n\n  const histoCounter = useCallback(() => {\n    setHistory([...history, counter]);\n  }, [counter, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Other Counter\", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-text\",\n      children: counter % 2 ? 'nombre impair' : 'nombre pair'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(counter + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(counter - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), history.map((histo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Valeur \", index, \":\", histo]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 40\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Storie, \"p6g2kqUFITK7/3gn9tyos5Tdfew=\");\n_c = Storie;\nexport default Storie;\nvar _c;\n$RefreshReg$(_c, \"Storie\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","jsxDEV","_jsxDEV","Storie","props","_s","counter","setCounter","history","setHistory","histoCounter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","histo","index","_c","$RefreshReg$"],"sources":["/Users/marie-sophieduplouich/Mooc/mooc-react/src/pages/Storie.jsx"],"sourcesContent":["// import React, { useCallback, useEffect, useState } from 'react';\n\n// function Storie(props) {\n\n//     const [counter, setCounter] = useState(0);\n//     const [history, setHistory] = useState([]);\n\n//     useEffect(() => {\n//         setHistory([...history, counter]);\n//     }, [counter]);\n\n//     useCallback(() => {\n//         setHistory([]);\n//     }, []);\n\n//     console.log(history);\n//     return (\n//         <div>\n//             <h2>Other Counter{counter}</h2>\n//             map sur history\n//             <ul>\n//                 {history.map((history, index) => <li key={index}>{history}</li>\n//                 )}\n//             </ul>\n//             <button onClick={() => setHistory([])}>Reset</button>\n\n//             <div className=\"navbar-text\">{counter % 2 ? 'nombre impair' : 'nombre pair'}</div>\n//             <button onClick={() => setCounter(counter + 1)}>+</button>\n//             <button onClick={() => setCounter(counter - 1)}>-</button>\n//         </div>\n//     );\n// }\n\n// export default Storie;\n\n//   un historique apparait quand je clique sur le bouton + ou -.Quand j'actualise la page l'historique disparait. Je ne savais pas que je devais stocker les données\n\n// code du formateur ci-dessous\n\n\nimport React, { useCallback, useEffect, useState } from 'react';\n\nfunction Storie(props) {\n    const [counter, setCounter] = useState(0);\n    const [history, setHistory] = useState([]);\n    // ci-dessus c'est réactive\n    \n    // remplir l'historique avec la valeur actuelle du compteur = Usecallback\n    \n    const histoCounter = useCallback(() => {\n        setHistory([...history, counter]);\n    }, [counter, history]);\n\n    return (\n        <div>\n        <h2>Other Counter{counter}</h2>\n        <div className=\"navbar-text\">{counter % 2 ? 'nombre impair':'nombre pair'}</div>\n        <button onClick={() => setCounter (counter + 1)}>+</button>\n        <button onClick={() => setCounter (counter - 1)}>-</button>\n        <br/>\n        {history.map((histo, index) => <div key={index} >Valeur {index}:{histo}</div>)}\n        </div>\n    );\n}\n\nexport default Storie;\n\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C;;EAEA;;EAEA,MAAMU,YAAY,GAAGZ,WAAW,CAAC,MAAM;IACnCW,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEF,OAAO,CAAC,CAAC;EACrC,CAAC,EAAE,CAACA,OAAO,EAAEE,OAAO,CAAC,CAAC;EAEtB,oBACIN,OAAA;IAAAS,QAAA,gBACAT,OAAA;MAAAS,QAAA,GAAI,eAAa,EAACL,OAAO;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/Bb,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAL,QAAA,EAAEL,OAAO,GAAG,CAAC,GAAG,eAAe,GAAC;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChFb,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAAED,OAAO,GAAG,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3Db,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAAED,OAAO,GAAG,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3Db,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJP,OAAO,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAAKlB,OAAA;MAAAS,QAAA,GAAkB,SAAO,EAACS,KAAK,EAAC,GAAC,EAACD,KAAK;IAAA,GAA7BC,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8B,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEd;AAACV,EAAA,CArBQF,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAuBf,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}